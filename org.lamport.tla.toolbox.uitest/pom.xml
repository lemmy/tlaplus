<?xml version="1.0" encoding="UTF-8"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>parent</artifactId>
    <groupId>tlatoolbox</groupId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <groupId>tlatoolbox</groupId>
  <artifactId>org.lamport.tla.toolbox.uitest</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>eclipse-test-plugin</packaging>
  <properties>
      <!-- Do not include test project in Sonar reporting. -->
      <sonar.skip>true</sonar.skip>
  </properties>

	<dependencies>
        <!-- Down below we manually install the standalone feature. Maven/Tycho isn't
        	 smart enough to figure this out by itself. Thus, we have to tell Tycho
        	 explicitly. -->
  		<dependency>
            <groupId>tlatoolbox</groupId>
            <artifactId>org.lamport.tla.toolbox.feature.standalone</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
   	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Where to put jacoco coverage report -->
							<destFile>target/jacoco.exec</destFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Compile java sources and exclude aspects -->
	      <plugin>
	        <groupId>org.eclipse.tycho</groupId>
	        <artifactId>tycho-compiler-plugin</artifactId>
	        <version>${tycho-version}</version>
	        <configuration>
	          <excludeResources>
	            <exludeResource>**/*.aj</exludeResource>
	          </excludeResources>
	        </configuration>
	      </plugin>
	      
			<!-- Run JUnit tests -->
      		<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-surefire-plugin</artifactId>
				<version>${tycho-version}</version>

				<configuration>
					<showEclipseLog>true</showEclipseLog>
					<useUIHarness>true</useUIHarness>
					<useUIThread>${tycho.test.vm.useUiThread}</useUIThread>
					<argLine>${tycho.test.vm.argline} ${tycho.testArgLine}</argLine>
					<!-- use our product and application to launch the tests -->
					<product>org.lamport.tla.toolbox.product.standalone.product</product>
					<application>org.lamport.tla.toolbox.application</application>

					<systemProperties combine.children="append">
						<!-- References used by tests to access spec files -->
						<org.lamport.tla.toolbox.tool.tlc.ui.test.PathToSpecA>${project.build.directory}/../org.lamport.tla.toolbox.test/farsite/DistributedSystemModule.tla</org.lamport.tla.toolbox.tool.tlc.ui.test.PathToSpecA>
						<org.lamport.tla.toolbox.tool.tlc.ui.test.PathToSpecB>${project.build.directory}/../org.lamport.tla.toolbox.uitest/DieHard/DieHard.tla</org.lamport.tla.toolbox.tool.tlc.ui.test.PathToSpecB>
					</systemProperties>

					<dependencies>
						<!-- help system needs javax.servlet -->
						<dependency>
							<type>p2-installable-unit</type>
							<artifactId>javax.servlet</artifactId>
							<version>2.5.0</version>
						</dependency>
						<!-- explicit dependency is only needed because SWTbot brings its own 
							hamcrest bundle which conflicts with the one from junit in the eclipse platform -->
						<dependency>
							<type>p2-installable-unit</type>
							<artifactId>org.hamcrest</artifactId>
							<version>0.0.0</version>
						</dependency>
						<!-- explicit dependency is needed because product/app is provided 
							by this bundle -->
						<dependency>
							<type>p2-installable-unit</type>
							<artifactId>org.lamport.tla.toolbox.product.standalone</artifactId>
							<version>0.0.0</version>
						</dependency>
						<dependency>
							<type>p2-installable-unit</type>
							<artifactId>org.eclipse.equinox.event</artifactId>
							<version>0.0.0</version>
						</dependency>
					</dependencies>
					<bundleStartLevel>
						<bundle>
							<id>org.eclipse.equinox.event</id>
							<level>4</level>
							<autoStart>true</autoStart>
						</bundle>
					</bundleStartLevel>

				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
