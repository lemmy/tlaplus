--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: TLA.End.To.End.Test1
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _1OLRMAlXEem_pLt0eVfQIQ
Runtime-Version: 2.4.0.201902010011
Save-Time: 5/22/19, 10:30 AM
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

End to End Test
 type-text "EXTENDS Naturals"
    key-type Enter
    type-text "VARIABLE x"
    key-type Enter -times 1
    type-text "Init == x = 0"
    key-type Enter -times 2
    type-text "Next == x' = x + 1"
    key-type Enter -times 1
    type-text "Spec == Init /\ [][Next]_x"

Invariant: x<10
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//Create Spec
OpenTLACreateNew

try -command {
	with [get-editor $TLA-SPEC-NAME | get-text-viewer] {
	    key-type Down
	    type-text "EXTENDS Naturals, Sequences"
	    key-type Enter
	    type-text "VARIABLE x"
	    key-type Enter -times 1
	    type-text "Init == x = 0"
	    key-type Enter -times 2
	    type-text "Next == x' = x + 1"
	    key-type Enter -times 1
	    type-text "Spec == Init /\ [][Next]_x"
	    key-type Enter -times 1
	    key-type "M1+s"
    }
    
    get-menu -path "TLC Model Checker/New Model..." | click
	get-window "New model..." | get-label "Please input the name of the model to create" | get-property caption 
	    | equals "Please input the name of the model to create" | verify-true
	get-window "New model..." | get-button OK | click
	get-editor "Model_1" | get-label "Model Overview" | get-property caption | equals "Model Overview" | verify-true
	with [get-editor "Model_1" | get-section "What to check?"] {
	    get-button "Deadlock" | uncheck
	    with [get-section Invariants] {
	        click
	        get-button "Add" | click
	    }
	}
	with [get-window -class WizardDialog] {
	    get-text-viewer | type-text "x<10"
	    get-button Finish | click
	}
	with [get-editor "Model_1" | get-section "How to run?"] {
	    click
		get-link "Advanced TLC execution options" | click
	}
	get-editbox -after [get-label "Number of worker threads:"] | set-text 2
	get-editor "Model_1" | get-button "Runs TLC on the model." | click

	wait-run    
	    
	get-editor "Model_1" | get-section General | get-link "1 Error" | get-property caption | equals "1 Error" | verify-true
	with [get-view "TLC Errors"] {
	    get-text-viewer | get-property text | equals "Invariant x<10 is violated." | verify-true
	    get-section "Error-Trace" | get-property "getText()" | equals "Error-Trace" | verify-true
	}
	
	with [get-view "TLC Errors" | get-section "Error-Trace" | get-tree] {
	    get-item -path " <Initial predicate>" | expand
	    get-cell 2 0 | click
	}
	
	get-view "TLC Errors" | get-section "Error-Trace" | get-tree | get-cell 2 0 | click
	get-view "TLC Errors" | get-section "Error-Trace" | get-text-viewer | get-property text | equals "/\\ x = 1" 
	    | verify-true
	with [get-view "TLC Errors" | get-section "Error-Trace" | get-tree] {
	    get-item -path " <Next line 6, col 9 to line 6, col 18 of module new>" | expand
	    get-cell 3 0 | click
	}
	get-view "TLC Errors" | get-section "Error-Trace" | get-text-viewer | get-property text | equals 1 | verify-true
	get-view "TLC Errors" | get-section "Error-Trace" | get-tree | get-cell 4 0 | click
	get-view "TLC Errors" | get-section "Error-Trace" | get-text-viewer | get-property text | equals "/\\ x = 2" 
	    | verify-true

	with [get-view "TLC Errors" | get-section "Error-Trace Exploration"] {
        get-button "Add" | click
	}
	with [get-window -class WizardDialog] {
	    get-text-viewer | type-text "foo == x \in Nat"
	    get-button Finish | click
	}
	with [get-view "TLC Errors" | get-section "Error-Trace Exploration"] {
        get-button "Add" | click
	}
	with [get-window -class WizardDialog] {
	    get-text-viewer | type-text "42 # 23"
	    get-button Finish | click
	}
	with [get-view "TLC Errors" | get-section "Error-Trace Exploration"] {
        get-button "Add" | click
	}
	with [get-window -class WizardDialog] {
	    get-text-viewer | type-text "stateNum == _TEPosition"
	    get-button Finish | click
	}
	with [get-view "TLC Errors" | get-section "Error-Trace Exploration"] {
        get-button "Add" | click
	}
	with [get-window -class WizardDialog] {
	    get-text-viewer | type-text "sum == LET s[i \in DOMAIN _TETrace] == IF i = 1 THEN 1 ELSE s[i-1] + 1 IN s[stateNum]"
	    get-button Finish | click
	}

	with [get-view "TLC Errors" | get-section "Error-Trace Exploration"] {
	    get-button "Explore" | click
	}
   
	get-view "TLC Errors" | get-section "Error-Trace" | get-tree | get-cell 6 0 | click
	get-view "TLC Errors" | get-section "Error-Trace" | get-text-viewer | get-property text | equals "/\\ 42 # 23 = TRUE\n/\\  foo = TRUE\n/\\  stateNum = 2\n/\\  sum = 2\n/\\  x = 1" 
	    | verify-true

	with [get-view "TLC Errors" | get-section "Error-Trace Exploration"] {
        get-button "Restore" | click
        get-button "Add" | click
	}
	with [get-window -class WizardDialog] {
	    get-text-viewer | type-text "bar(n) == x \in Nat"
	    get-button Finish | click
	}
	with [get-view "TLC Errors" | get-section "Error-Trace Exploration"] {
	    get-button "Explore" | click
	}
	with [get-window "Parsing error when running trace explorer"] {
    with [get-editbox] {
        get-property text | equals "***Parse Error***\nWas expecting \"Expression or Instance\"\nEncountered \"Beginning of definition\"  in Error-Trace Exploration expression at line 5 and token \"==\" \n\nResidual stack trace follows:\nDefinition starting at line 51, column 1.\nModule body starting at line 5, column 1.\nModule definition starting at line 1, column 1.\n" 
	    | verify-true
    }
    get-button OK | click
}

} -finally {
	DeleteSpecNew
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
